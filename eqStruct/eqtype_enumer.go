// Code generated by "enumer -type=EQType"; DO NOT EDIT.

package eqStruct

import (
	"fmt"
)

const _EQTypeName = "EQT_UnknownEQT_PlayerProfileEQT_PlayEverquestResponseEQT_ZoneServerInfoEQT_PlayRequestEQT_ZoneEntryServerEQT_LogServerEQT_EnterWorldEQT_LoginInfoEQT_LoginAcceptedEQT_SpawnPositionUpdateEQT_SpawnPositionUpdatesEQT_ZoneSpawnsEQT_ZoneSpawnEQT_ClientUpdateEQT_ManaUpdateEQT_NewZoneEQT_StaminaUpdateEQT_MoveDoorEQT_SpawnAppearanceEQT_ActionEQT_BeginCastEQT_DamageEQT_ExpUpdateEQT_ConsiderEQT_TargetEQT_HPUpdateEQT_ObjectEQT_DeleteSpawnEQT_ZoneEntryClientEQT_ServerMOTDEQT_WearChangeEQT_TintStruct"

var _EQTypeIndex = [...]uint16{0, 11, 28, 53, 71, 86, 105, 118, 132, 145, 162, 185, 209, 223, 236, 252, 266, 277, 294, 306, 325, 335, 348, 358, 371, 383, 393, 405, 415, 430, 449, 463, 477, 491}

func (i EQType) String() string {
	if i >= EQType(len(_EQTypeIndex)-1) {
		return fmt.Sprintf("EQType(%d)", i)
	}
	return _EQTypeName[_EQTypeIndex[i]:_EQTypeIndex[i+1]]
}

var _EQTypeValues = []EQType{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}

var _EQTypeNameToValueMap = map[string]EQType{
	_EQTypeName[0:11]:    0,
	_EQTypeName[11:28]:   1,
	_EQTypeName[28:53]:   2,
	_EQTypeName[53:71]:   3,
	_EQTypeName[71:86]:   4,
	_EQTypeName[86:105]:  5,
	_EQTypeName[105:118]: 6,
	_EQTypeName[118:132]: 7,
	_EQTypeName[132:145]: 8,
	_EQTypeName[145:162]: 9,
	_EQTypeName[162:185]: 10,
	_EQTypeName[185:209]: 11,
	_EQTypeName[209:223]: 12,
	_EQTypeName[223:236]: 13,
	_EQTypeName[236:252]: 14,
	_EQTypeName[252:266]: 15,
	_EQTypeName[266:277]: 16,
	_EQTypeName[277:294]: 17,
	_EQTypeName[294:306]: 18,
	_EQTypeName[306:325]: 19,
	_EQTypeName[325:335]: 20,
	_EQTypeName[335:348]: 21,
	_EQTypeName[348:358]: 22,
	_EQTypeName[358:371]: 23,
	_EQTypeName[371:383]: 24,
	_EQTypeName[383:393]: 25,
	_EQTypeName[393:405]: 26,
	_EQTypeName[405:415]: 27,
	_EQTypeName[415:430]: 28,
	_EQTypeName[430:449]: 29,
	_EQTypeName[449:463]: 30,
	_EQTypeName[463:477]: 31,
	_EQTypeName[477:491]: 32,
}

// EQTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func EQTypeString(s string) (EQType, error) {
	if val, ok := _EQTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to EQType values", s)
}

// EQTypeValues returns all values of the enum
func EQTypeValues() []EQType {
	return _EQTypeValues
}

// IsAEQType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i EQType) IsAEQType() bool {
	for _, v := range _EQTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
